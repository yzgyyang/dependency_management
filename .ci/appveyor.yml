environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\.ci\\run_with_env.cmd"
    PIP_CACHE_DIR: C:\pip_cache

  matrix:
    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "64"

cache:
  - "C:\\pip_cache"
  - "C:\\Users\\appveyor\\AppData\\Roaming\\nltk_data"
  - "C:\\tools\\composer"
  - "%LOCALAPPDATA%\\Composer"
  - "C:\\tools\\rust"
  - "C:\\tools\\rscript"

branches:
  except:
    - /^sils\/.*/

init:
  - ps: $Env:PATH = 'c:\tools\composer\;' + $Env:PATH

install:
  # Prepend msys with pacman to PATH.
  - SET "PATH=C:\msys64\usr\bin;%PATH%"
  - pacman --version
  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  - "%CMD_IN_ENV% pip install -r requirements.txt -r test-requirements.txt"
  # Enable Windows Update
  # This is required for one of the dependencies of the Chocolatey PHP package
  - sc config wuauserv start=auto
  - net start wuauserv
  # The following installs and sets up PHP
  - cinst -y php
  - copy C:\tools\php71\php.ini-production C:\tools\php71\php.ini
  - echo date.timezone="UTC" >> C:\tools\php71\php.ini
  - echo extension_dir=ext >> C:\tools\php71\php.ini
  - echo extension=php_openssl.dll >> C:\tools\php71\php.ini
  - SET PATH=C:\tools\php71\;%PATH%
  # Prepare Composer
  - ps: If ((Test-Path c:\tools\composer) -eq $False) {
        New-Item -Path c:\tools\composer -ItemType 'directory' }
  - ps: If ((Test-Path c:\tools\composer\composer.phar) -eq $False) {
        appveyor DownloadFile https://getcomposer.org/composer.phar
        -FileName c:\tools\composer\composer.phar }
  - ps: Set-Content -Path c:\tools\composer\composer.bat -Value (
        '@php c:\tools\composer\composer.phar %*')
  # Preparing cargo
  - ps: If ((Test-Path c:\tools\rust) -eq $False) {
        (new-object net.webclient).DownloadFile(
        $("https://static.rust-lang.org/dist/"+
        "rust-nightly-i686-pc-windows-gnu.exe"),
        "C:\tools\rust-binary.exe") }
  - ps: If ((Test-Path c:\tools\rust\bin\rustc.exe) -eq $False) {
        C:\tools\rust-binary.exe /VERYSILENT /NORESTART /DIR=C:\tools\rust }
  - SET PATH=C:\tools\rust\bin;%PATH%
  # Preparing Rscript
  - ps: If ((Test-Path c:\tools\rscript) -eq $False) {
        (new-object net.webclient).DownloadFile(
        $("https://cran.r-project.org/bin/windows/"+
        "base/R-3.4.0-win.exe"), "C:\tools\rscript-binary.exe") }
  - ps: If ((Test-Path c:\tools\rscript\bin\R.exe) -eq $False) {
        C:\tools\rscript-binary.exe /VERYSILENT /NORESTART
        /DIR=C:\tools\rscript }
  - SET PATH=C:\tools\rscript\bin;%PATH%
  # As installation to windows for these requirements are broken.
  # Tests are still being skipped.
  - rm dependency_management/requirements/JuliaRequirement.py
        tests/JuliaRequirementTest.py
        dependency_management/requirements/CabalRequirement.py
        tests/CabalRequirementTest.py
        dependency_management/requirements/CondaRequirement.py
        tests/CondaRequirementTest.py
        dependency_management/requirements/LuarocksRequirement.py
        tests/LuarocksRequirementTest.py

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  - "%CMD_IN_ENV% python setup.py install"
  - "%CMD_IN_ENV% py.test --cov-fail-under=100"
  - "%CMD_IN_ENV% pip install coala-bears"
  - "%CMD_IN_ENV% coala --ci"

on_success:
  - codecov

on_failure:
  - codecov

matrix:
  fast_finish: true
