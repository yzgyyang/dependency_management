variables:
  CI_BUILD_REF_NAME: $CI_COMMIT_REF_NAME
  CI_BUILD_ID: $CI_JOB_ID
  CI_BUILD_REPO: $CI_REPOSITORY_URL
  CI_BUILD_REF: $CI_COMMIT_SHA
  PYTHON: python3
  JULIA: https://julialang-s3.julialang.org/bin/linux/x64/0.6/julia-0.6.2-linux-x86_64.tar.gz  # Ignore YAMLLintBear
  DEBIAN_FRONTEND: noninteractive
  XDG_CACHE_HOME: "$CI_PROJECT_DIR/.cache/"

  # bzip2 is used by miniconda.sh
  # git is required by python package codecov and go get
  # make is used by cpan
  # tar is used by haskellstack.sh
  COMMON_DEPS: >
    bzip2
    git
    make
    tar
  DEBIAN_PACKAGE_MANAGERS: >
    cabal-install
    ghc
    cargo
    composer
    golang
    julia
    luarocks
    npm
    python3-pip
    r-base
    rubygems
    maven
    php-pear
  DEBIAN_OTHER_DEPS: >
    oracle-java8-installer
    perl-doc
  FEDORA_OTHER_DEPS: >
    lua-devel
    rubygem-rdoc
    perl-core
  OPENSUSE_OTHER_DEPS: >
    java-1_8_0-openjdk
    lua53-devel
  ARCH_OTHER_DEPS: >
    jdk8-openjdk

cache:
  paths:
    - .cache/pip

.common_deps_script: &common_deps_script |
  export GOPATH=$HOME/go
  export PATH=$PATH:$GOPATH/bin
  export PATH=$PATH:$HOME/miniconda/bin
  PYTHON=${PYTHON} .ci/deps.sh

.common_script: &common_script
  - $PYTHON -m pytest --cov-fail-under=100
  - codecov

test:ubuntu_rolling:
  image: ubuntu:rolling
  variables:
    PYTHON: python3.6
  before_script:
    - PACKAGE_MANAGERS=${DEBIAN_PACKAGE_MANAGERS}
    # julia is packaged by Debian, but not available in Ubuntu
    - PACKAGE_MANAGERS=${PACKAGE_MANAGERS/julia/}
    - apt-get update -qq
    - apt-get install -y -qq software-properties-common curl
    - curl $JULIA -o Julia.tar.gz
    - tar -xf Julia.tar.gz
    - rm Julia.tar.gz
    - rm dependency_management/requirements/BrewRequirement.py
         dependency_management/requirements/PacmanRequirement.py
         dependency_management/requirements/PkgRequirement.py
         dependency_management/requirements/PortageRequirement.py
         dependency_management/requirements/ZypperRequirement.py
         dependency_management/requirements/DnfRequirement.py
         dependency_management/requirements/YumRequirement.py
         tests/BrewRequirementTest.py
         tests/PacmanRequirementTest.py
         tests/PkgRequirementTest.py
         tests/PortageRequirementTest.py
         tests/ZypperRequirementTest.py
         tests/DnfRequirementTest.py
         tests/YumRequirementTest.py
    - mv julia* julia
    - ln -s $PWD/julia/bin/julia /usr/local/bin/julia
    - echo 'oracle-java8-installer shared/accepted-oracle-license-v1-1
            select true' | /usr/bin/debconf-set-selections
    - add-apt-repository -y ppa:webupd8team/java
    - apt-get update -qq
    - apt-get install -y $PACKAGE_MANAGERS $DEBIAN_OTHER_DEPS $COMMON_DEPS
    - *common_deps_script
  script: *common_script

test:fedora_25_py35: &fedora
  image: fedora:25
  variables:
    PYTHON: python3.5
  before_script:
    - PACKAGE_MANAGERS=${DEBIAN_PACKAGE_MANAGERS}
    - echo 'install_weak_deps=False' >> /etc/dnf/dnf.conf
    - PACKAGE_MANAGERS=${PACKAGE_MANAGERS/r-base/R-base}
    - PACKAGE_MANAGERS=${PACKAGE_MANAGERS/python3-pip/${PYTHON/./}}
    # Installing Java 7 for checkstyle 6.19 is problematic
    - PACKAGE_MANAGERS=${PACKAGE_MANAGERS/maven/}
    - rm dependency_management/requirements/MavenRequirement.py
         tests/MavenRequirementTest.py
    - rm dependency_management/requirements/AptRequirement.py
         dependency_management/requirements/BrewRequirement.py
         dependency_management/requirements/PacmanRequirement.py
         dependency_management/requirements/PkgRequirement.py
         dependency_management/requirements/PortageRequirement.py
         dependency_management/requirements/ZypperRequirement.py
         tests/AptRequirementTest.py
         tests/BrewRequirementTest.py
         tests/PacmanRequirementTest.py
         tests/PkgRequirementTest.py
         tests/PortageRequirementTest.py
         tests/ZypperRequirementTest.py
    - dnf install -y $PACKAGE_MANAGERS $FEDORA_OTHER_DEPS $COMMON_DEPS
    # python37 package doesnt install pip
    - $PYTHON -m ensurepip
    - *common_deps_script
  script: *common_script

test:fedora_28_py37:
  <<: *fedora
  image: fedora:28
  variables:
    PYTHON: python3.7

test:opensuse_leap:
  image: opensuse:leap
  variables:
    PYTHON: python3.4
    REPOS_BASE: http://download.opensuse.org/repositories
    RELEASE: openSUSE_Leap_42.3
    LUAROCKS_REPO: devel:languages:lua
    CARGO_REPO: home:Ledest:devel
  before_script:
    - PACKAGE_MANAGERS=${DEBIAN_PACKAGE_MANAGERS}
    - zypper removerepo 'NON OSS' 'NON OSS Update'
    - PACKAGE_MANAGERS=${PACKAGE_MANAGERS/r-base/R-base}
    - PACKAGE_MANAGERS=${PACKAGE_MANAGERS/golang/go}
    - PACKAGE_MANAGERS=${PACKAGE_MANAGERS/composer/php-composer}
    - PACKAGE_MANAGERS=${PACKAGE_MANAGERS/luarocks/lua53-luarocks}
    - PACKAGE_MANAGERS=${PACKAGE_MANAGERS/php-pear/php5-pear}
    # cargo installed separately below
    - PACKAGE_MANAGERS=${PACKAGE_MANAGERS/cargo/}
    # Installing Java 7 for checkstyle 6.19 is problematic
    - PACKAGE_MANAGERS=${PACKAGE_MANAGERS/maven/}
    - rm dependency_management/requirements/MavenRequirement.py
         tests/MavenRequirementTest.py
    - rm dependency_management/requirements/AptRequirement.py
         dependency_management/requirements/BrewRequirement.py
         dependency_management/requirements/PacmanRequirement.py
         dependency_management/requirements/PkgRequirement.py
         dependency_management/requirements/PortageRequirement.py
         dependency_management/requirements/DnfRequirement.py
         dependency_management/requirements/YumRequirement.py
         tests/AptRequirementTest.py
         tests/BrewRequirementTest.py
         tests/PacmanRequirementTest.py
         tests/PkgRequirementTest.py
         tests/PortageRequirementTest.py
         tests/DnfRequirementTest.py
         tests/YumRequirementTest.py
    # luarocks
    - zypper addrepo $REPOS_BASE/$LUAROCKS_REPO/$RELEASE/$LUAROCKS_REPO.repo
    - zypper --no-gpg-checks --non-interactive install
             $PACKAGE_MANAGERS $OPENSUSE_OTHER_DEPS $COMMON_DEPS
    # cargo
    - zypper addrepo $REPOS_BASE/$CARGO_REPO/$RELEASE/$CARGO_REPO.repo
    - zypper --no-gpg-checks --non-interactive install cargo rust-std
    # go list requires /usr/lib64/go/src/runtime/internal/sys/zversion.go
    - mkdir -p /usr/lib64/go/src/runtime/internal/sys/
    - touch /usr/lib64/go/src/runtime/internal/sys/zversion.go
    - *common_deps_script
  script: *common_script

test:arch:
  image: greyltc/archlinux-aur:latest
  variables:
    # Change Gem installation test package
    GEM_INSTALLED_PACKAGE: cmath
    # Required for Perl binaries like cpan and pod2man (used by pacaur)
    PERL_PATH: /usr/bin/core_perl:/usr/bin/site_perl:/usr/bin/vendor_perl
    # Required for auto-fetching of pgp keys
    GNUPGHOME: /home/docker
    # Pacaur needs this variable
    EDITOR: vi
    PEAR_GIT: https://aur.archlinux.org/php-pear.git
    PEAR_PATH: /home/docker/php-pear
  before_script:
    # Required for auto-fetching of pgp keys
    - echo "keyserver-options auto-key-retrieve" > /home/docker/gpg.conf
    - PACKAGE_MANAGERS=${DEBIAN_PACKAGE_MANAGERS}
    - PACKAGE_MANAGERS=${PACKAGE_MANAGERS/golang/go}
    - PACKAGE_MANAGERS=${PACKAGE_MANAGERS/python3-pip/python-pip}
    - PACKAGE_MANAGERS=${PACKAGE_MANAGERS/r-base/r}
    - PACKAGE_MANAGERS=${PACKAGE_MANAGERS/php-pear/}
    - pacman --noconfirm -Syu
    - pacman --noconfirm -S ${ARCH_OTHER_DEPS}
    - pacman --noconfirm -S ${PACKAGE_MANAGERS} ${COMMON_DEPS}
    - export PATH=$PATH:$PERL_PATH
    # Uncomment Color option to make sure pacaur does not error out
    - sed -i 's/#Color/Color/g' /etc/pacman.conf
    # docker user in used ALWAYS with pacaur as it cannot be ran as root
    # Update Pacaur
    - su docker -c "pacaur -Syu --noconfirm --noedit"
    # Working around the PKGBUILD edits for php-pear
    - su docker -c "git clone $PEAR_GIT $PEAR_PATH"
    - sed -i 's/}\/usr\/share\/pear/}/g' $PEAR_PATH/PKGBUILD
    # install using makepkg
    - su docker -c "cd $PEAR_PATH && makepkg -si --noconfirm"
    - cabal update
    - rm dependency_management/requirements/AptRequirement.py
         dependency_management/requirements/BrewRequirement.py
         dependency_management/requirements/PkgRequirement.py
         dependency_management/requirements/PortageRequirement.py
         dependency_management/requirements/ZypperRequirement.py
         dependency_management/requirements/DnfRequirement.py
         dependency_management/requirements/YumRequirement.py
         tests/AptRequirementTest.py
         tests/BrewRequirementTest.py
         tests/PkgRequirementTest.py
         tests/PortageRequirementTest.py
         tests/ZypperRequirementTest.py
         tests/DnfRequirementTest.py
         tests/YumRequirementTest.py
    - *common_deps_script
  script: *common_script

check_code:
  image: python:3.6
  before_script:
    - pip3 install .
    - pip3 install coala-bears
  script:
    - coala-ci
